Test03の分割後コード(Test04)の仕様

### STEP1
Javaのクラスを宣言しメインメソッドを定義する。メインメソッド内でテスト用のメッセージを出力します。
実行結果:
$ java Test04_1
mainメソッド

### STEP2
ユーザーに3桁以上の数字を3つ入力させ、それぞれの数字を13で割った余りをカード番号として変換します（0～12の範囲にするため）。forループは3回繰り返し、各入力に対して変換を行います。
実行結果:
$ java Test04_2
「3桁以上の数字を3つ入力してください」
100 200 300 <-
変換されたカード番号: 9
変換されたカード番号: 4
変換されたカード番号: 1

$ java Test04_2
「3桁以上の数字を3つ入力してください」
123 234 345 <-
変換されたカード番号: 6
変換されたカード番号: 0
変換されたカード番号: 7

### STEP3
カード番号を変換した後、ゲームの開始を通知します。また、ゲームの勝ち、負け、引き分けのカウントを初期化して、メッセージを出力します。初期化は整数型の変数を使用し、整数が0の初期値を持つため、何も割り当てずに0としています。
実行結果:
$ java Test04_3
「3桁以上の数字を3つ入力してください」
100 200 300 <-
High and Low Start
ゲーム初期化完了

$ java Test04_3
「3桁以上の数字を3つ入力してください」
123 234 345 <-
High and Low Start
ゲーム初期化完了

### STEP4
0～12の数字をトランプカードのA～Kに変換し、現在のカードを表示する処理を追加します。カード表示は、forループで先の2枚のカードについて行われます。switch文を使用してカード番号をA～Kの文字で表現します。
実行結果:
$ java Test04_4
「3桁以上の数字を3つ入力してください」
100 200 300 <-
High and Low Start
現在のカードは10です
現在のカードは6です
カード表示完了

$ java Test04_4
「3桁以上の数字を3つ入力してください」
123 234 345 <-
High and Low Start
現在のカードは7です
現在のカードはAです
カード表示完了

### STEP5
ユーザーに「次のカードがhighかlowか」を入力してもらい、入力内容が「exit」の場合はゲームを終了するロジックを追加します。入力取得はScannerクラスを利用して、equalsIgnoreCaseで文字列の比較を行います。
実行結果:
$ java Test04_5
「3桁以上の数字を3つ入力してください」
100 200 300 <-
High and Low Start
現在のカードは10です
「次のカードがhighかlowかあなたの予想を入力してください (降りる場合はexitと入力してください)」
high <-
現在のカードは6です
「次のカードがhighかlowかあなたの予想を入力してください (降りる場合はexitと入力してください)」
exit <-
ゲームを終了します
予想入力完了またはゲーム終了

$ java Test04_5
「3桁以上の数字を3つ入力してください」
123 234 345 <-
High and Low Start
現在のカードは7です
「次のカードがhighかlowかあなたの予想を入力してください (降りる場合はexitと入力してください)」
low <-
現在のカードはAです
「次のカードがhighかlowかあなたの予想を入力してください (降りる場合はexitと入力してください)」
low <-
予想入力完了またはゲーム終了

### STEP6
ユーザーの入力に基づいて、勝ち負けや引き分けを判定する処理を実装します。判定は、ユーザーの予想（highまたはlow）とカードの数値を比較して行います。highでは次のカードが大きければ勝ち、lowでは次のカードが小さければ勝ちとします。それ以外は負け、引き分けは等しければ引き分けです。
実行結果:
$ java Test04_6
「3桁以上の数字を3つ入力してください」
100 200 300 <-
High and Low Start
現在のカードは10です
「次のカードがhighかlowかあなたの予想を入力してください (降りる場合はexitと入力してください)」
high <-
次のカードは6です
あなたの負けです
現在のカードは6です
「次のカードがhighかlowかあなたの予想を入力してください (降りる場合はexitと入力してください)」
exit <-
ゲームを終了します
ゲーム終了
勝敗判定処理終了

$ java Test04_6
「3桁以上の数字を3つ入力してください」
123 234 345 <-
High and Low Start
現在のカードは7です
「次のカードがhighかlowかあなたの予想を入力してください (降りる場合はexitと入力してください)」
high <-
次のカードはAです
あなたの負けです
現在のカードはAです
「次のカードがhighかlowかあなたの予想を入力してください (降りる場合はexitと入力してください)」
low <-
次のカードは8です
あなたの負けです
ゲーム終了
勝敗判定処理終了

### STEP7
ゲームの終了時に、勝敗や引き分けの結果を集計し表示するメソッドを追加します。勝利、敗北、引き分けのカウントをそれぞれ表示するためには、整数変数の値を出力するだけで済みます。
実行結果:
$ java Test04_7
「3桁以上の数字を3つ入力してください」
100 200 300 <-
High and Low Start
現在のカードは10です
「次のカードがhighかlowかあなたの予想を入力してください (降りる場合はexitと入力してください)」
high <-
次のカードは6です
あなたの負けです
現在のカードは6です
「次のカードがhighかlowかあなたの予想を入力してください (降りる場合はexitと入力してください)」
exit <-
ゲームを終了します
ゲーム終了
勝敗引き分けの数
 win:0
 lose:1
 draw:0

$ java Test04_7
「3桁以上の数字を3つ入力してください」
123 234 345 <-
High and Low Start
現在のカードは7です
「次のカードがhighかlowかあなたの予想を入力してください (降りる場合はexitと入力してください)」
high <-
次のカードはAです
あなたの負けです
現在のカードはAです
「次のカードがhighかlowかあなたの予想を入力してください (降りる場合はexitと入力してください)」
low <-
次のカードは8です
あなたの負けです
ゲーム終了
勝敗引き分けの数
 win:0
 lose:2
 draw:0
